{"remainingRequest":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex.lopez/vue-projects/kpdemoapp/src/components/Preferences.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/src/components/Preferences.vue","mtime":1556208625925},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n    name: \"Preferences\",\n    methods: {\n        ...mapActions(['initPreferences', 'updateFrdpMFAChoiceChanged', 'updateFrdpMFAPrefChanged', 'updateSelectedMFAChoice', 'updateSelectedMFAPref', 'saveProfileChanges', 'logout']),\n        onMFAChoiceChange(event) {\n            this.updateFrdpMFAChoiceChanged(true);\n            this.updateSelectedMFAChoice(event.target.value);\n        },\n        onMFAPrefChange(event) {\n            this.updateFrdpMFAPrefChanged(true);\n            this.updateSelectedMFAPref(event.target.value);\n        },\n        registerPushDevice() {\n            this.saveProfileChanges();\n            this.logout();\n            window.location = `https://kp.frdpcloud.com/openam/XUI/?service=OAMChain&goto=${encodeURIComponent(\"https://mfa-poc-forgerock.kaiserpermanente.org/kpdemoapp/login/done\")}#login`;\n        }\n    },\n    computed: {\n        ...mapGetters(['usrProfile', 'isMFAChoiceConfigured', 'isMFAPrefConfigured', 'selectedMFAChoice', 'selectedMFAPref', 'mfaChoices', 'mfaPrefs', 'isPUSHChosen']),\n        frdpMFAChoice() {\n            if (this.isMFAChoiceConfigured) {\n                return this.usrProfile['frdpmfachoice'];\n            }\n            else {\n                return null;\n            }\n        },\n        frdpMFAPref() {\n            if (this.isMFAPrefConfigured) {\n                return this.usrProfile['frdpmfapref'];\n            }\n            else {\n                return null;\n            }\n        }\n    },\n    created() {\n        this.initPreferences();\n    }\n}\n",{"version":3,"sources":["Preferences.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Preferences.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"row\">\n        <div class=\"card kaiser-card\" style=\"width: 23rem;\">\n            <img src=\"../assets/Authentication_Choices.jpg\" class=\"card-img-top\">\n            <div class=\"card-body\">\n                <h5 class=\"kaiser-title-dark-bg\">Authentication Preferences</h5>&nbsp;&nbsp;&nbsp;\n                <p class=\"kaiser-text-dark-bg\">You can select your method of Authentication<br>and the time when MFA is to be triggered.</p>\n            </div>\n        </div>\n        <div class=\"col-sm-6\">\n            <form>\n                <div class=\"form-group\">\n                    <label for=\"mfaChoice\">MFA Method Trigger Preference</label>\n                    <select id=\"mfaChoice\" v-model=\"selectedMFAChoice\" class=\"custom-select\" @change=\"onMFAChoiceChange($event)\">\n                        <option v-for=\"choice in mfaChoices\" :value=\"choice.value\">{{ choice.display }}</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"mfaPref\">MFA Method Choice</label>\n                    <select id=\"mfaPref\" v-model=\"selectedMFAPref\" class=\"custom-select\" @change=\"onMFAPrefChange($event)\">\n                        <option v-for=\"pref in mfaPrefs\" :value=\"pref.value\">{{ pref.display }}</option>\n                    </select>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-4\">\n                        <button type=\"button\" class=\"btn kaiser-btn-primary\" @click=\"saveProfileChanges\">Save</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <router-link to=\"/kpdemoapp\" class=\"btn btn-outline-secondary\">Cancel</router-link>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapActions, mapGetters } from 'vuex';\n\n    export default {\n        name: \"Preferences\",\n        methods: {\n            ...mapActions(['initPreferences', 'updateFrdpMFAChoiceChanged', 'updateFrdpMFAPrefChanged', 'updateSelectedMFAChoice', 'updateSelectedMFAPref', 'saveProfileChanges', 'logout']),\n            onMFAChoiceChange(event) {\n                this.updateFrdpMFAChoiceChanged(true);\n                this.updateSelectedMFAChoice(event.target.value);\n            },\n            onMFAPrefChange(event) {\n                this.updateFrdpMFAPrefChanged(true);\n                this.updateSelectedMFAPref(event.target.value);\n            },\n            registerPushDevice() {\n                this.saveProfileChanges();\n                this.logout();\n                window.location = `https://kp.frdpcloud.com/openam/XUI/?service=OAMChain&goto=${encodeURIComponent(\"https://mfa-poc-forgerock.kaiserpermanente.org/kpdemoapp/login/done\")}#login`;\n            }\n        },\n        computed: {\n            ...mapGetters(['usrProfile', 'isMFAChoiceConfigured', 'isMFAPrefConfigured', 'selectedMFAChoice', 'selectedMFAPref', 'mfaChoices', 'mfaPrefs', 'isPUSHChosen']),\n            frdpMFAChoice() {\n                if (this.isMFAChoiceConfigured) {\n                    return this.usrProfile['frdpmfachoice'];\n                }\n                else {\n                    return null;\n                }\n            },\n            frdpMFAPref() {\n                if (this.isMFAPrefConfigured) {\n                    return this.usrProfile['frdpmfapref'];\n                }\n                else {\n                    return null;\n                }\n            }\n        },\n        created() {\n            this.initPreferences();\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}