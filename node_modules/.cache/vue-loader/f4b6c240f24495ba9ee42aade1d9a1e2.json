{"remainingRequest":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex.lopez/vue-projects/kpdemoapp/src/components/UserSearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/src/components/UserSearch.vue","mtime":1549510493786},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default {\n    name: \"UserSearch\",\n    data: function() {\n        return {\n            result: null\n        }\n    },\n    computed: {\n        ...mapGetters(['searchAttributes', 'searchOps', 'selectedSearchAttribute', 'selectedSearchOp', 'searchCriteriaValue', 'searchResults'])\n    },\n    methods: {\n        ...mapActions(['updateSelectedSearchAttribute', 'updateSelectedSearchOp', 'updateSearchCriteriaValue', 'search']),\n        onSelectedSearchAttrChanged(event) {\n            this.updateSelectedSearchAttribute(event.target.value);\n        },\n        onSelectedSearchOpChanged(event) {\n            this.updateSelectedSearchOp(event.target.value);\n        },\n        onSearchCriteriaValueChanged(event) {\n            this.updateSearchCriteriaValue(event.target.value);\n        },\n        onSearch() {\n            this.search();\n        },\n        onRowSelected(selectedRow) {\n            this.$emit('rowSelected', selectedRow);\n        }\n    }\n}\n",{"version":3,"sources":["UserSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserSearch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <label for=\"searchBy\">Search By</label>\n            <select id=\"searchBy\" v-model=\"selectedSearchAttribute\" class=\"custom-select\" @change=\"onSelectedSearchAttrChanged($event)\">\n                <option v-for=\"attribute in searchAttributes\" :value=\"attribute.value\">{{ attribute.display }}</option>\n            </select>\n        </div>\n        <div class=\"col-sm-3\">\n            <label for=\"searchOp\">Operation</label>\n            <select id=\"searchOp\" v-model=\"selectedSearchOp\" class=\"custom-select\" @change=\"onSelectedSearchOpChanged($event)\">\n                <option v-for=\"op in searchOps\" :value=\"op.value\">{{ op.display }}</option>\n            </select>\n        </div>\n        <div class=\"col-sm-3\">\n            <label for=\"searchCriteria\">Search Value</label>\n            <input id=\"searchCriteria\" type=\"text\" class=\"form-control\" @change=\"onSearchCriteriaValueChanged($event)\" :value=\"searchCriteriaValue\">\n        </div>\n        <div class=\"col-sm-3\">\n            <div class=\"row buttonCell\">\n                <button id=\"search\" type=\"button\" class=\"btn btn-outline-secondary\" @click=\"onSearch\">Search</button>\n            </div>\n\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapGetters, mapActions } from 'vuex';\n\n    export default {\n        name: \"UserSearch\",\n        data: function() {\n            return {\n                result: null\n            }\n        },\n        computed: {\n            ...mapGetters(['searchAttributes', 'searchOps', 'selectedSearchAttribute', 'selectedSearchOp', 'searchCriteriaValue', 'searchResults'])\n        },\n        methods: {\n            ...mapActions(['updateSelectedSearchAttribute', 'updateSelectedSearchOp', 'updateSearchCriteriaValue', 'search']),\n            onSelectedSearchAttrChanged(event) {\n                this.updateSelectedSearchAttribute(event.target.value);\n            },\n            onSelectedSearchOpChanged(event) {\n                this.updateSelectedSearchOp(event.target.value);\n            },\n            onSearchCriteriaValueChanged(event) {\n                this.updateSearchCriteriaValue(event.target.value);\n            },\n            onSearch() {\n                this.search();\n            },\n            onRowSelected(selectedRow) {\n                this.$emit('rowSelected', selectedRow);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .buttonCell {\n       vertical-align: bottom;\n    }\n\n</style>"]}]}