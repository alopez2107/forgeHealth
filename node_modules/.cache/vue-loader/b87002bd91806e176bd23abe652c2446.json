{"remainingRequest":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex.lopez/vue-projects/kpdemoapp/src/components/UserSearch.vue?vue&type=style&index=0&id=a6862386&scoped=true&lang=css&","dependencies":[{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/src/components/UserSearch.vue","mtime":1549495858004},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.searchBar {\n    height: 10vh;\n    width: 100%;\n    background-color: cadetblue;\n}\n\n",{"version":3,"sources":["UserSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA","file":"UserSearch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"searchBar\">\n        <div class=\"row\" >\n            <form>\n                <div class=\"form-group col-sm-3\">\n                    <label for=\"searchBy\">Search By</label>\n                    <select id=\"searchBy\" v-model=\"selectedSearchAttribute\" class=\"custom-select\" @change=\"onSelectedSearchAttrChanged($event)\">\n                        <option v-for=\"attr in searchAttributes\" :value=\"attr.value\">{{ attr.display }}</option>\n                    </select>\n                </div>\n                <div class=\"form-group col-sm-3\">\n                    <label for=\"searchOp\">Operation</label>\n                    <select id=\"searchOp\" v-model=\"selectedSearchOp\" class=\"custom-select\" @change=\"onSelectedSearchOpChanged($event)\">\n                        <option v-for=\"op in searchOps\" :value=\"op.value\">{{ op.display }}</option>\n                    </select>\n                </div>\n                <div class=\"form-group col-sm-3\">\n                    <label for=\"searchCriteria\">Search Value</label>\n                    <input id=\"searchCriteria\" type=\"text\" class=\"form-control\" @change=\"onSearchCriteriaValueChanged($event)\" :value=\"searchCriteriaValue\">\n                </div>\n                <div class=\"col-sm-3\">\n                    <button type=\"button\" class=\"btn btn-outlined-primary\" @click=\"onSearch\">Search</button>\n                </div>\n            </form>\n        </div>\n        <div v-if=\"searchResults\" class=\"row\">\n            <ul class=\"list-group\">\n                <SearchResultItem v-for=\"result in searchResults\" :result=\"result\" :key=\"result._id\" @rowSelected=\"onRowSelected\"></SearchResultItem>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapGetters, mapActions } from 'vuex';\n    import SearchResultItem from './SearchResultItem';\n\n    export default {\n        name: \"UserSearch\",\n        computed: {\n            ...mapGetters(['searchAttributes', 'searchOps', 'selectedSearchAttribute', 'selectedSearchOp', 'searchCriteriaValue', 'searchResults'])\n        },\n        methods: {\n            ...mapActions(['updateSelectedSearchAttribute', 'updateSelectedSearchOp', 'updateSearchCriteriaValue', 'search']),\n            onSelectedSearchAttrChanged(event) {\n                this.updateSelectedSearchAttribute(event.target.value);\n            },\n            onSelectedSearchOpChanged(event) {\n                this.updateSelectedSearchOp(event.target.value);\n            },\n            onSearchCriteriaValueChanged(event) {\n                this.updateSearchCriteriaValue(event.target.value);\n            },\n            onSearch() {\n                this.search();\n            },\n            onRowSelected(result) {\n                this.$emit('rowSelected', result);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .searchBar {\n        height: 10vh;\n        width: 100%;\n        background-color: cadetblue;\n    }\n\n</style>"]}]}