{"remainingRequest":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/thread-loader/dist/cjs.js!/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js!/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex.lopez/vue-projects/kpdemoapp/src/components/Devices.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/src/components/Devices.vue","mtime":1560779088082},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport DeviceProfileItem from './DeviceProfileItem';\nexport default {\n  name: \"Devices\",\n  components: {\n    DeviceProfileItem: DeviceProfileItem\n  },\n  computed: _objectSpread({}, mapGetters(['deviceTypes', 'userTrustedDevices', 'userPushDevices', 'userOathDevices', 'userFIDODevices'])),\n  methods: _objectSpread({}, mapActions(['fetchDevices']), {\n    onRefresh: function onRefresh() {\n      this.fetchDevices();\n    }\n  }),\n  created: function created() {\n    this.fetchDevices();\n  }\n};",{"version":3,"sources":["Devices.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,iBAAA,MAAA,qBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AADA,GAFA;AAKA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,aAAA,EAAA,oBAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,iBAAA,CAAA,CADA,CALA;AAQA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,cAAA,CAAA,CADA;AAEA,IAAA,SAFA,uBAEA;AACA,WAAA,YAAA;AACA;AAJA,IARA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,YAAA;AACA;AAhBA,CAAA","sourcesContent":["<template>\n    <div class=\"row\">\n        <div class=\"card kaiser-card\" style=\"width: 23rem;\">\n            <img src=\"../assets/mobile-devices.jpg\" class=\"card-img-top\">\n            <div class=\"card-body\">\n                <h5 class=\"kaiser-title-dark-bg\">MFA Devices</h5>&nbsp;&nbsp;&nbsp;\n                <p class=\"kaiser-text-dark-bg\">You can manage your MFA devices.<br>You can remove devices you lost or<br>no longer own.</p>\n            </div>\n        </div>\n        <div class=\"col-md-8\">\n            <div class=\"row\">\n                <button class=\"btn kaiser-btn-primary\" type=\"button\" @click=\"onRefresh\">Refresh Devices</button>\n            </div>\n            <div class=\"row separator\">\n                <h2> </h2>\n            </div>\n            <!-- div class=\"row\">\n                <h4 class=\"infoText\">Trusted devices</h4>\n            </div>\n            <div class=\"row\">\n                <ul class=\"list-group\" >\n                    <DeviceProfileItem v-if=\"userTrustedDevices != null && userTrustedDevices.length > 0\" v-for=\"device in userTrustedDevices\" :device=\"device\" :key=\"device.id\" :deviceType=\"deviceTypes.trusted\"></DeviceProfileItem>\n                    <p v-else class=\"infoText\">No Trusted Devices Found.</p>\n                </ul>\n            </div -->\n            <div class=\"row\">\n                <h4 class=\"infoText\">PUSH devices</h4>\n            </div>\n            <div class=\"row\">\n                <ul class=\"list-group\" >\n                    <DeviceProfileItem v-if=\"userPushDevices != null && userPushDevices.length > 0\" v-for=\"device in userPushDevices\" :device=\"device\" :key=\"device.id\" :deviceType=\"deviceTypes.push\"></DeviceProfileItem>\n                    <p v-else class=\"infoText\">No PUSH Devices Found.</p>\n                </ul>\n            </div>\n            <div class=\"row\">\n                <h4 class=\"infoText\">OATH devices</h4>\n            </div>\n            <div class=\"row\">\n                <ul class=\"list-group\" >\n                    <DeviceProfileItem v-if=\"userOathDevices != null && userOathDevices.length > 0\" v-for=\"device in userOathDevices\" :device=\"device\" :key=\"device.id\" :deviceType=\"deviceTypes.oath\"></DeviceProfileItem>\n                    <p v-else class=\"infoText\">No OATH Devices Found.</p>\n                </ul>\n            </div>\n            <div class=\"row\">\n                <h4 class=\"infoText\">FIDO devices</h4>\n            </div>\n            <div class=\"row\">\n                <ul class=\"list-group\" >\n                    <DeviceProfileItem v-if=\"userFIDODevices != null && userFIDODevices.length > 0\" v-for=\"device in userFIDODevices\" :device=\"device\" :key=\"device.id\" :deviceType=\"deviceTypes.fido\"></DeviceProfileItem>\n                    <p v-else class=\"infoText\">No FIDO Devices Found.</p>\n                </ul>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapActions, mapGetters } from 'vuex';\n    import DeviceProfileItem from './DeviceProfileItem';\n    export default {\n        name: \"Devices\",\n        components: {\n            DeviceProfileItem\n        },\n        computed: {\n            ...mapGetters(['deviceTypes', 'userTrustedDevices', 'userPushDevices', 'userOathDevices', 'userFIDODevices'])\n        },\n        methods: {\n            ...mapActions(['fetchDevices']),\n            onRefresh() {\n                this.fetchDevices();\n            }\n        },\n        created() {\n            this.fetchDevices();\n        }\n    }\n</script>\n\n<style scoped>\n    h4 {\n        color: cadetblue;\n        font-size: medium;\n        font-family: Verdana;\n    }\n\n    .infoText {\n        color: darkblue;\n        font-size: small;\n        font-family: Verdana;\n    }\n\n</style>"],"sourceRoot":"src/components"}]}