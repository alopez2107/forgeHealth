{"remainingRequest":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/thread-loader/dist/cjs.js!/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js!/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/eslint-loader/index.js??ref--13-0!/Users/alex.lopez/vue-projects/kpdemoapp/src/store/modules/idm.js","dependencies":[{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/src/store/modules/idm.js","mtime":1563467005436},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport api from '../../api/fridm';\nimport webutils from '../../api/webutils';\nimport { router } from '../../main';\nvar state = {\n  usrProfile: null,\n  regUser: null,\n  givenNameChanged: false,\n  snChanged: false,\n  mailChanged: false,\n  telephoneNumberChanged: false,\n  frdpMFAChoiceChanged: false,\n  frdpMFAPrefChanged: false,\n  mfaChoiceValuesHD: [{\n    value: \"always\",\n    display: \"Always\"\n  }, {\n    value: \"sometimes\",\n    display: \"Only on New Devices\"\n  }, {\n    value: \"never\",\n    display: \"Never\"\n  }, {\n    value: \"required\",\n    display: \"Required\"\n  }, {\n    value: \"passwordless\",\n    display: \"Passwordless\"\n  }],\n  mfaChoiceValues: [{\n    value: \"always\",\n    display: \"Always\"\n  }, {\n    value: \"sometimes\",\n    display: \"Only on New Devices\"\n  }, {\n    value: \"never\",\n    display: \"Never\"\n  }, {\n    value: \"required\",\n    display: \"Required\"\n  }, {\n    value: \"passwordless\",\n    display: \"Passwordless\"\n  }],\n  mfaPrefsValues: [{\n    value: \"sms\",\n    display: \"One Time Password (Text Messaging)\"\n  }, {\n    value: \"push\",\n    display: \"PUSH Notification (Mobile Device)\"\n  }, {\n    value: \"fido\",\n    display: \"YUBI Key (FIDO)\"\n  }, {\n    value: \"mail\",\n    display: \"One Time Password (E-Mail)\"\n  }, {\n    value: \"nopassword\",\n    display: \"Use the NoPassword App\"\n  }],\n  selectedMFAChoice: null,\n  selectedMFAPref: null,\n  targetUserId: null,\n  FRSSOCookie: null,\n  isHelpDesk: false,\n  isPwdReset: false,\n  userTrustedDevices: null,\n  userPushDevices: null,\n  userOathDevices: null,\n  userFIDODevices: null,\n  regStatus: false,\n  emailVerificationCode: null,\n  regToken: null,\n  loginId: null,\n  password: null,\n  loginError: null,\n  loggedInUserID: null\n};\nvar getters = {\n  isLoggedIn: function isLoggedIn(state) {\n    return !!state.usrProfile && !!state.FRSSOCookie;\n  },\n  loginId: function loginId(state) {\n    return state.loginId;\n  },\n  password: function password(state) {\n    return state.password;\n  },\n  usrProfile: function usrProfile(state) {\n    return state.usrProfile;\n  },\n  userTrustedDevices: function userTrustedDevices(state) {\n    return state.userTrustedDevices;\n  },\n  userPushDevices: function userPushDevices(state) {\n    return state.userPushDevices;\n  },\n  userOathDevices: function userOathDevices(state) {\n    return state.userOathDevices;\n  },\n  userFIDODevices: function userFIDODevices(state) {\n    return state.userFIDODevices;\n  },\n  isHelpDesk: function isHelpDesk(state) {\n    return state.isHelpDesk;\n  },\n  givenNameChanged: function givenNameChanged(state) {\n    return state.givenNameChanged;\n  },\n  snChanged: function snChanged(state) {\n    return state.snChanged;\n  },\n  mailChanged: function mailChanged(state) {\n    return state.mailChanged;\n  },\n  telephoneNumberChanged: function telephoneNumberChanged(state) {\n    return state.telephoneNumberChanged;\n  },\n  isMFAChoiceConfigured: function isMFAChoiceConfigured(state) {\n    return !!state.usrProfile.frdpmfachoice;\n  },\n  isMFAPrefConfigured: function isMFAPrefConfigured(state) {\n    return !!state.usrProfile.frdpmfapref;\n  },\n  mfaChoices: function mfaChoices(state) {\n    return state.mfaChoiceValues;\n  },\n  mfaChoicesHD: function mfaChoicesHD(state) {\n    return state.mfaChoiceValuesHD;\n  },\n  mfaPrefs: function mfaPrefs(state) {\n    return state.mfaPrefsValues;\n  },\n  selectedMFAChoice: function selectedMFAChoice(state) {\n    return state.selectedMFAChoice;\n  },\n  selectedMFAPref: function selectedMFAPref(state) {\n    return state.selectedMFAPref;\n  },\n  isPUSHChosen: function isPUSHChosen(state) {\n    var result = !!state.selectedMFAPref && state.selectedMFAPref === 'push' && state.usrProfile.frdpmfapref !== 'push';\n    return result;\n  },\n  FRSSOCookie: function FRSSOCookie(state) {\n    return state.FRSSOCookie;\n  },\n  isPwdReset: function isPwdReset(state) {\n    return state.isPwdReset;\n  },\n  regUser: function regUser(state) {\n    return state.regUser;\n  },\n  regStatus: function regStatus(state) {\n    return state.regStatus;\n  },\n  loginError: function loginError(state) {\n    return state.loginError;\n  },\n  isLoginError: function isLoginError(state) {\n    return !!state.loginError;\n  },\n  loggedInUserID: function loggedInUserID(state) {\n    return state.loggedInUserID;\n  }\n};\nvar actions = {\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var state;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              state = _ref.state;\n              _context.next = 3;\n              return api.login(state.loginId, state.password).then(function (response) {\n                var obSSOCookie = response.data.obSSOCookie;\n                console.log(response);\n                console.log(obSSOCookie);\n                window.$cookies.set(\"ObSSOCookie\", obSSOCookie, null, null, \"kaiserpermanente.org\", true);\n                window.location = \"https://mfa-poc-forgerock.kaiserpermanente.org/fhdemoapp/oam/login\";\n              }).catch(function (error) {\n                console.log(error);\n                state.loginError = \"Login Error, please retry.\";\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function login(_x) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n  fetchProfile: function () {\n    var _fetchProfile = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2) {\n      var commit, profile;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return api.fetchUserProfile();\n\n            case 3:\n              profile = _context2.sent;\n              commit('setProfile', profile.data.result[0]);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function fetchProfile(_x2) {\n      return _fetchProfile.apply(this, arguments);\n    }\n\n    return fetchProfile;\n  }(),\n  resolveAuthz: function () {\n    var _resolveAuthz = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3) {\n      var commit, state, authzResp, myProfilePerm, helpDesk, profile;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit, state = _ref3.state;\n              console.log(\"Inside resolveAuthz\");\n              _context3.next = 4;\n              return api.resolveAuthz(state.FRSSOCookie).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n              authzResp = _context3.sent;\n              myProfilePerm = authzResp.data.find(function (permission) {\n                return permission.resource === 'https://hc.frdpcloud.com/fhdemoapp';\n              });\n              helpDesk = authzResp.data.find(function (permission) {\n                return permission.resource === 'https://hc.frdpcloud.com/fhdemoapp/helpdesk';\n              });\n\n              if (helpDesk.actions.GET != null) {\n                commit('setIsHelpDesk', true);\n              } else {\n                commit('setIsHelpDesk', false);\n              }\n\n              window.localStorage.setItem('loggedInUserID', myProfilePerm.attributes.uid[0]);\n              _context3.next = 11;\n              return api.fetchUserProfile();\n\n            case 11:\n              profile = _context3.sent;\n              commit('setProfile', profile.data.result[0]);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function resolveAuthz(_x3) {\n      return _resolveAuthz.apply(this, arguments);\n    }\n\n    return resolveAuthz;\n  }(),\n  fetchDevices: function () {\n    var _fetchDevices = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref4) {\n      var commit, state, devices;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit, state = _ref4.state;\n              _context4.next = 3;\n              return api.getDevices(state.usrProfile.userName, state.FRSSOCookie);\n\n            case 3:\n              devices = _context4.sent;\n              commit('setUserTrustedDevices', devices.data.trustedDevices);\n              commit('setUserPushDevices', devices.data.pushDevices);\n              commit('setUserOathDevices', devices.data.oathDevices);\n              commit('setUserFIDODevices', devices.data.fidoDevices);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function fetchDevices(_x4) {\n      return _fetchDevices.apply(this, arguments);\n    }\n\n    return fetchDevices;\n  }(),\n  updateLoginId: function updateLoginId(_ref5, loginId) {\n    var commit = _ref5.commit;\n    commit('setLoginId', loginId);\n  },\n  updatePassword: function updatePassword(_ref6, password) {\n    var commit = _ref6.commit;\n    commit('setPassword', password);\n  },\n  updateProfile: function updateProfile(_ref7, profile) {\n    var commit = _ref7.commit;\n    commit('setProfile', profile);\n  },\n  updateGivenNameChanged: function updateGivenNameChanged(_ref8, givenNameChangedValue) {\n    var commit = _ref8.commit;\n    commit('setGivenNameChanged', givenNameChangedValue);\n  },\n  updateSNChanged: function updateSNChanged(_ref9, snChangedValue) {\n    var commit = _ref9.commit;\n    commit('setSNChanged', snChangedValue);\n  },\n  updateMailChanged: function updateMailChanged(_ref10, mailChangedValue) {\n    var commit = _ref10.commit;\n    commit('setMailChanged', mailChangedValue);\n  },\n  updateTelephoneNumberChanged: function updateTelephoneNumberChanged(_ref11, telephoneNumberChangedValue) {\n    var commit = _ref11.commit;\n    commit('setTelephoneNumberChanged', telephoneNumberChangedValue);\n  },\n  updateFrdpMFAChoiceChanged: function updateFrdpMFAChoiceChanged(_ref12, frdpMFAChoiceChangedValue) {\n    var commit = _ref12.commit;\n    commit('setFrdpMFAChoiceChanged', frdpMFAChoiceChangedValue);\n  },\n  updateFrdpMFAPrefChanged: function updateFrdpMFAPrefChanged(_ref13, frdpMFAPrefChangedValue) {\n    var commit = _ref13.commit;\n    commit('setFrdpMFAPrefChanged', frdpMFAPrefChangedValue);\n  },\n  updateSelectedMFAChoice: function updateSelectedMFAChoice(_ref14, newMFAChoice) {\n    var commit = _ref14.commit;\n    commit('setSelectedMFAChoice', newMFAChoice);\n  },\n  updateSelectedMFAPref: function updateSelectedMFAPref(_ref15, newMFAPref) {\n    var commit = _ref15.commit;\n    commit('setSelectedMFAPref', newMFAPref);\n  },\n  updateTargetUserId: function updateTargetUserId(_ref16, targetUserId) {\n    var commit = _ref16.commit;\n    commit('setTargetUserId', targetUserId);\n  },\n  updateFRSSOCookie: function updateFRSSOCookie(_ref17, value) {\n    var commit = _ref17.commit;\n    commit('setFRSSOCookie', value);\n  },\n  updateIsPwdReset: function updateIsPwdReset(_ref18, value) {\n    var commit = _ref18.commit;\n    commit('setIsPwdReset', value);\n  },\n  updateRegUser: function updateRegUser(_ref19, user) {\n    var commit = _ref19.commit;\n    commit('setRegUser', user);\n  },\n  updateRegEmailVerificationCode: function updateRegEmailVerificationCode(_ref20, code) {\n    var commit = _ref20.commit;\n    commit('setEmailVerificationCode', code);\n  },\n  updateRegToken: function updateRegToken(_ref21, token) {\n    var commit = _ref21.commit;\n    commit('setRegToken', token);\n  },\n  initPreferences: function initPreferences(_ref22) {\n    var state = _ref22.state,\n        commit = _ref22.commit;\n    commit('setSelectedMFAPref', state.usrProfile.frdpmfapref);\n    commit('setSelectedMFAChoice', state.usrProfile.frdpmfachoice);\n  },\n  retrieveSelfRegConfig: function () {\n    var _retrieveSelfRegConfig = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return api.getSelfRegConfig();\n\n            case 2:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function retrieveSelfRegConfig() {\n      return _retrieveSelfRegConfig.apply(this, arguments);\n    }\n\n    return retrieveSelfRegConfig;\n  }(),\n  registerUser: function () {\n    var _registerUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(_ref23) {\n      var state;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              state = _ref23.state;\n              _context6.next = 3;\n              return api.registerUser(state.regUser);\n\n            case 3:\n              router.push('/fhdemoapp');\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function registerUser(_x5) {\n      return _registerUser.apply(this, arguments);\n    }\n\n    return registerUser;\n  }(),\n  finishRegistration: function () {\n    var _finishRegistration = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(_ref24) {\n      var state;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              state = _ref24.state;\n              _context7.next = 3;\n              return api.finishRegistration(state.regToken, state.emailVerificationCode);\n\n            case 3:\n              router.push(\"/fhdemoapp\");\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    }));\n\n    function finishRegistration(_x6) {\n      return _finishRegistration.apply(this, arguments);\n    }\n\n    return finishRegistration;\n  }(),\n  saveProfileChanges: function () {\n    var _saveProfileChanges = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(_ref25) {\n      var state;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              state = _ref25.state;\n\n              if (!state.givenNameChanged) {\n                _context8.next = 4;\n                break;\n              }\n\n              _context8.next = 4;\n              return api.modifyAttribute(state.usrProfile.userName, \"givenName\", state.usrProfile.givenName);\n\n            case 4:\n              if (!state.snChanged) {\n                _context8.next = 7;\n                break;\n              }\n\n              _context8.next = 7;\n              return api.modifyAttribute(state.usrProfile.userName, \"sn\", state.usrProfile.sn);\n\n            case 7:\n              if (!state.mailChanged) {\n                _context8.next = 10;\n                break;\n              }\n\n              _context8.next = 10;\n              return api.modifyAttribute(state.usrProfile.userName, \"mail\", state.usrProfile.mail);\n\n            case 10:\n              if (!state.telephoneNumberChanged) {\n                _context8.next = 13;\n                break;\n              }\n\n              _context8.next = 13;\n              return api.modifyAttribute(state.usrProfile.userName, \"telephoneNumber\", state.usrProfile.telephoneNumber);\n\n            case 13:\n              if (!state.frdpMFAChoiceChanged) {\n                _context8.next = 17;\n                break;\n              }\n\n              state.usrProfile.frdpmfachoice = state.selectedMFAChoice;\n              _context8.next = 17;\n              return api.modifyAttribute(state.usrProfile.userName, \"frdpmfachoice\", state.selectedMFAChoice);\n\n            case 17:\n              if (!state.frdpMFAPrefChanged) {\n                _context8.next = 21;\n                break;\n              }\n\n              state.usrProfile.frdpmfapref = state.selectedMFAPref;\n              _context8.next = 21;\n              return api.modifyAttribute(state.usrProfile.userName, \"frdpmfapref\", state.selectedMFAPref);\n\n            case 21:\n              router.push('/fhdemoapp');\n\n            case 22:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, this);\n    }));\n\n    function saveProfileChanges(_x7) {\n      return _saveProfileChanges.apply(this, arguments);\n    }\n\n    return saveProfileChanges;\n  }(),\n  lockUser: function () {\n    var _lockUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(_ref26) {\n      var state;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              state = _ref26.state;\n              _context9.next = 3;\n              return api.lockUser(state.targetUserId);\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    }));\n\n    function lockUser(_x8) {\n      return _lockUser.apply(this, arguments);\n    }\n\n    return lockUser;\n  }(),\n  unlockUser: function () {\n    var _unlockUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(_ref27) {\n      var state;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              state = _ref27.state;\n              _context10.next = 3;\n              return api.unlockUser(state.targetUserId);\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, this);\n    }));\n\n    function unlockUser(_x9) {\n      return _unlockUser.apply(this, arguments);\n    }\n\n    return unlockUser;\n  }(),\n  logout: function () {\n    var _logout = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(_ref28) {\n      var state, commit;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              state = _ref28.state, commit = _ref28.commit;\n              _context11.next = 3;\n              return api.logout(state.FRSSOCookie);\n\n            case 3:\n              commit('setFRSSOCookie', null);\n              commit('setProfile', null);\n              window.$cookies.remove('iPlanetDirectoryPro', null, 'kaiserpermanente.org');\n              router.push(\"/fhdemoapp\");\n\n            case 7:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, this);\n    }));\n\n    function logout(_x10) {\n      return _logout.apply(this, arguments);\n    }\n\n    return logout;\n  }()\n};\nvar mutations = {\n  setLoginId: function setLoginId(state, loginId) {\n    state.loginId = loginId;\n  },\n  setPassword: function setPassword(state, password) {\n    state.password = password;\n  },\n  setProfile: function setProfile(state, profile) {\n    if (state.usrProfile == null) {\n      state.usrProfile = profile;\n    } else {\n      for (var prop in profile) {\n        state.usrProfile[prop] = profile[prop];\n      }\n    }\n  },\n  setUserTrustedDevices: function setUserTrustedDevices(state, devices) {\n    state.userTrustedDevices = devices;\n  },\n  setUserPushDevices: function setUserPushDevices(state, devices) {\n    state.userPushDevices = devices;\n  },\n  setUserOathDevices: function setUserOathDevices(state, devices) {\n    state.userOathDevices = devices;\n  },\n  setUserFIDODevices: function setUserFIDODevices(state, devices) {\n    state.userFIDODevices = devices;\n  },\n  setGivenNameChanged: function setGivenNameChanged(state, value) {\n    state.givenNameChanged = value;\n  },\n  setSNChanged: function setSNChanged(state, value) {\n    state.snChanged = value;\n  },\n  setMailChanged: function setMailChanged(state, value) {\n    state.mailChanged = value;\n  },\n  setTelephoneNumberChanged: function setTelephoneNumberChanged(state, value) {\n    state.telephoneNumberChanged = value;\n  },\n  setFrdpMFAChoiceChanged: function setFrdpMFAChoiceChanged(state, value) {\n    state.frdpMFAChoiceChanged = value;\n  },\n  setFrdpMFAPrefChanged: function setFrdpMFAPrefChanged(state, value) {\n    state.frdpMFAPrefChanged = value;\n  },\n  setSelectedMFAChoice: function setSelectedMFAChoice(state, value) {\n    state.selectedMFAChoice = value;\n  },\n  setSelectedMFAPref: function setSelectedMFAPref(state, value) {\n    state.selectedMFAPref = value;\n  },\n  setTargetUserId: function setTargetUserId(state, value) {\n    state.targetUserId = value;\n  },\n  setFRSSOCookie: function setFRSSOCookie(state, value) {\n    state.FRSSOCookie = value;\n  },\n  setIsHelpDesk: function setIsHelpDesk(state, value) {\n    state.isHelpDesk = value;\n  },\n  setIsPwdReset: function setIsPwdReset(state, value) {\n    state.isPwdReset = value;\n  },\n  setRegUser: function setRegUser(state, value) {\n    state.regUser = value;\n  },\n  setRegStatus: function setRegStatus(state, value) {\n    state.regStatus = value;\n  },\n  setEmailVerificationCode: function setEmailVerificationCode(state, value) {\n    state.emailVerificationCode = value;\n  },\n  setRegToken: function setRegToken(state, value) {\n    state.regToken = value;\n  },\n  setLoggedInUserID: function setLoggedInUserID(state, userId) {\n    state.loggedInUserID = userId;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/alex.lopez/vue-projects/kpdemoapp/src/store/modules/idm.js"],"names":["api","webutils","router","state","usrProfile","regUser","givenNameChanged","snChanged","mailChanged","telephoneNumberChanged","frdpMFAChoiceChanged","frdpMFAPrefChanged","mfaChoiceValuesHD","value","display","mfaChoiceValues","mfaPrefsValues","selectedMFAChoice","selectedMFAPref","targetUserId","FRSSOCookie","isHelpDesk","isPwdReset","userTrustedDevices","userPushDevices","userOathDevices","userFIDODevices","regStatus","emailVerificationCode","regToken","loginId","password","loginError","loggedInUserID","getters","isLoggedIn","isMFAChoiceConfigured","frdpmfachoice","isMFAPrefConfigured","frdpmfapref","mfaChoices","mfaChoicesHD","mfaPrefs","isPUSHChosen","result","isLoginError","actions","login","then","response","obSSOCookie","data","console","log","window","$cookies","set","location","catch","error","fetchProfile","commit","fetchUserProfile","profile","resolveAuthz","authzResp","myProfilePerm","find","permission","resource","helpDesk","GET","localStorage","setItem","attributes","uid","fetchDevices","getDevices","userName","devices","trustedDevices","pushDevices","oathDevices","fidoDevices","updateLoginId","updatePassword","updateProfile","updateGivenNameChanged","givenNameChangedValue","updateSNChanged","snChangedValue","updateMailChanged","mailChangedValue","updateTelephoneNumberChanged","telephoneNumberChangedValue","updateFrdpMFAChoiceChanged","frdpMFAChoiceChangedValue","updateFrdpMFAPrefChanged","frdpMFAPrefChangedValue","updateSelectedMFAChoice","newMFAChoice","updateSelectedMFAPref","newMFAPref","updateTargetUserId","updateFRSSOCookie","updateIsPwdReset","updateRegUser","user","updateRegEmailVerificationCode","code","updateRegToken","token","initPreferences","retrieveSelfRegConfig","getSelfRegConfig","registerUser","push","finishRegistration","saveProfileChanges","modifyAttribute","givenName","sn","mail","telephoneNumber","lockUser","unlockUser","logout","remove","mutations","setLoginId","setPassword","setProfile","prop","setUserTrustedDevices","setUserPushDevices","setUserOathDevices","setUserFIDODevices","setGivenNameChanged","setSNChanged","setMailChanged","setTelephoneNumberChanged","setFrdpMFAChoiceChanged","setFrdpMFAPrefChanged","setSelectedMFAChoice","setSelectedMFAPref","setTargetUserId","setFRSSOCookie","setIsHelpDesk","setIsPwdReset","setRegUser","setRegStatus","setEmailVerificationCode","setRegToken","setLoggedInUserID","userId"],"mappings":"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","sourcesContent":["import api from '../../api/fridm';\nimport webutils from '../../api/webutils';\nimport { router } from '../../main';\n\nconst state = {\n    usrProfile: null,\n    regUser: null,\n    givenNameChanged: false,\n    snChanged: false,\n    mailChanged: false,\n    telephoneNumberChanged: false,\n    frdpMFAChoiceChanged: false,\n    frdpMFAPrefChanged: false,\n    mfaChoiceValuesHD: [\n        {\n            value: \"always\",\n            display: \"Always\"\n        },\n        {\n            value: \"sometimes\",\n            display: \"Only on New Devices\"\n        },\n        {\n            value: \"never\",\n            display: \"Never\"\n        },\n        {\n            value: \"required\",\n            display: \"Required\"\n        },\n        {\n            value: \"passwordless\",\n            display: \"Passwordless\"\n        }\n    ],\n    mfaChoiceValues: [\n        {\n            value: \"always\",\n            display: \"Always\"\n        },\n        {\n            value: \"sometimes\",\n            display: \"Only on New Devices\"\n        },\n        {\n            value: \"never\",\n            display: \"Never\"\n        },\n        {\n            value: \"required\",\n            display: \"Required\"\n        },\n        {\n            value: \"passwordless\",\n            display: \"Passwordless\"\n        }\n    ],\n    mfaPrefsValues: [\n        {\n            value: \"sms\",\n            display: \"One Time Password (Text Messaging)\"\n        },\n        {\n            value: \"push\",\n            display: \"PUSH Notification (Mobile Device)\"\n        },\n        {\n            value: \"fido\",\n            display: \"YUBI Key (FIDO)\"\n        },\n        {\n            value: \"mail\",\n            display: \"One Time Password (E-Mail)\"\n        },\n        {\n            value: \"nopassword\",\n            display: \"Use the NoPassword App\"\n        }\n    ],\n    selectedMFAChoice: null,\n    selectedMFAPref: null,\n    targetUserId: null,\n    FRSSOCookie: null,\n    isHelpDesk: false,\n    isPwdReset: false,\n    userTrustedDevices: null,\n    userPushDevices: null,\n    userOathDevices: null,\n    userFIDODevices: null,\n    regStatus: false,\n    emailVerificationCode: null,\n    regToken: null,\n    loginId: null,\n    password: null,\n    loginError: null,\n    loggedInUserID: null\n};\n\nconst getters = {\n    isLoggedIn: (state) => {\n        return !!state.usrProfile && !!state.FRSSOCookie;\n    },\n    loginId: (state) => {\n        return state.loginId;\n    },\n    password: (state) => {\n        return state.password;\n    },\n    usrProfile: (state) => {\n        return state.usrProfile;\n    },\n    userTrustedDevices: (state) => {\n        return state.userTrustedDevices;\n    },\n    userPushDevices: (state) => {\n        return state.userPushDevices;\n    },\n    userOathDevices: (state) => {\n        return state.userOathDevices;\n    },\n    userFIDODevices: (state) => {\n        return state.userFIDODevices;\n    },\n    isHelpDesk: (state) => {\n        return state.isHelpDesk;\n    },\n    givenNameChanged: (state) => {\n        return state.givenNameChanged;\n    },\n    snChanged: (state) => {\n        return state.snChanged;\n    },\n    mailChanged: (state) => {\n        return state.mailChanged;\n    },\n    telephoneNumberChanged: (state) => {\n        return state.telephoneNumberChanged;\n    },\n    isMFAChoiceConfigured: (state) => {\n        return !!state.usrProfile.frdpmfachoice;\n    },\n    isMFAPrefConfigured: (state) => {\n        return !!state.usrProfile.frdpmfapref;\n    },\n    mfaChoices: (state) => {\n        return state.mfaChoiceValues;\n    },\n    mfaChoicesHD: (state) => {\n        return state.mfaChoiceValuesHD;\n    },\n    mfaPrefs: (state) => {\n        return state.mfaPrefsValues;\n    },\n    selectedMFAChoice: (state) => {\n        return state.selectedMFAChoice;\n    },\n    selectedMFAPref: (state) => {\n        return state.selectedMFAPref;\n    },\n    isPUSHChosen: (state) => {\n        const result = (!!state.selectedMFAPref && state.selectedMFAPref === 'push' && state.usrProfile.frdpmfapref !== 'push');\n        return result;\n    },\n    FRSSOCookie: (state) => {\n        return state.FRSSOCookie;\n    },\n    isPwdReset: (state) => {\n        return state.isPwdReset;\n    },\n    regUser: (state) => {\n        return state.regUser;\n    },\n    regStatus: (state) => {\n        return state.regStatus;\n    },\n    loginError: (state) => {\n        return state.loginError;\n    },\n    isLoginError: (state) => {\n        return !!state.loginError;\n    },\n    loggedInUserID: (state) => {\n        return state.loggedInUserID;\n    }\n};\n\nconst actions = {\n    async login({state}) {\n        await api.login(state.loginId, state.password).then(response => {\n            var obSSOCookie = response.data.obSSOCookie;\n            console.log(response);\n            console.log(obSSOCookie);\n            window.$cookies.set(\"ObSSOCookie\", obSSOCookie, null, null, \"kaiserpermanente.org\", true);\n            window.location = \"https://mfa-poc-forgerock.kaiserpermanente.org/fhdemoapp/oam/login\";\n\n        }).catch(error => {\n            console.log(error);\n            state.loginError = \"Login Error, please retry.\";\n        });\n    },\n    async fetchProfile({ commit }) {\n        const profile = await api.fetchUserProfile();\n        commit('setProfile', profile.data.result[0]);\n    },\n    async resolveAuthz({ commit, state }) {\n        console.log(\"Inside resolveAuthz\");\n        const authzResp = await api.resolveAuthz(state.FRSSOCookie).catch((error) => {\n            console.log(error);\n        });\n        const myProfilePerm = authzResp.data.find((permission) => {\n            return permission.resource === 'https://hc.frdpcloud.com/fhdemoapp';\n        });\n        const helpDesk = authzResp.data.find((permission) => {\n            return permission.resource === 'https://hc.frdpcloud.com/fhdemoapp/helpdesk';\n        });\n        if (helpDesk.actions.GET != null) {\n            commit('setIsHelpDesk', true);\n        }\n        else {\n            commit('setIsHelpDesk', false);\n        }\n        window.localStorage.setItem('loggedInUserID', myProfilePerm.attributes.uid[0]);\n        const profile = await api.fetchUserProfile();\n        commit('setProfile', profile.data.result[0]);\n    },\n    async fetchDevices({ commit, state }) {\n        const devices = await api.getDevices(state.usrProfile.userName, state.FRSSOCookie);\n        commit('setUserTrustedDevices', devices.data.trustedDevices);\n        commit('setUserPushDevices', devices.data.pushDevices);\n        commit('setUserOathDevices', devices.data.oathDevices);\n        commit('setUserFIDODevices', devices.data.fidoDevices);\n    },\n    updateLoginId({commit}, loginId) {\n        commit('setLoginId', loginId);\n    },\n    updatePassword({commit}, password) {\n        commit('setPassword', password);\n    },\n    updateProfile({commit}, profile) {\n        commit('setProfile', profile);\n    },\n    updateGivenNameChanged({ commit }, givenNameChangedValue) {\n        commit('setGivenNameChanged', givenNameChangedValue);\n    },\n    updateSNChanged({ commit }, snChangedValue) {\n        commit('setSNChanged', snChangedValue);\n    },\n    updateMailChanged({ commit }, mailChangedValue) {\n        commit('setMailChanged', mailChangedValue);\n    },\n    updateTelephoneNumberChanged({ commit }, telephoneNumberChangedValue) {\n        commit('setTelephoneNumberChanged', telephoneNumberChangedValue);\n    },\n    updateFrdpMFAChoiceChanged({ commit }, frdpMFAChoiceChangedValue) {\n        commit('setFrdpMFAChoiceChanged', frdpMFAChoiceChangedValue);\n    },\n    updateFrdpMFAPrefChanged({ commit }, frdpMFAPrefChangedValue) {\n        commit('setFrdpMFAPrefChanged', frdpMFAPrefChangedValue);\n    },\n    updateSelectedMFAChoice( { commit }, newMFAChoice) {\n        commit('setSelectedMFAChoice', newMFAChoice);\n    },\n    updateSelectedMFAPref({ commit }, newMFAPref) {\n        commit('setSelectedMFAPref', newMFAPref);\n    },\n    updateTargetUserId( { commit } , targetUserId) {\n        commit('setTargetUserId', targetUserId);\n    },\n    updateFRSSOCookie( { commit }, value) {\n        commit('setFRSSOCookie', value);\n    },\n    updateIsPwdReset( { commit }, value ) {\n        commit('setIsPwdReset', value);\n    },\n    updateRegUser({commit}, user) {\n        commit('setRegUser', user );\n    },\n    updateRegEmailVerificationCode({commit}, code) {\n        commit('setEmailVerificationCode', code);\n    },\n    updateRegToken({commit}, token) {\n        commit('setRegToken', token);\n    },\n    initPreferences({state, commit }) {\n        commit('setSelectedMFAPref', state.usrProfile.frdpmfapref);\n        commit('setSelectedMFAChoice', state.usrProfile.frdpmfachoice);\n    },\n    async retrieveSelfRegConfig() {\n        return await api.getSelfRegConfig();\n    },\n    async registerUser({state}) {\n        await api.registerUser(state.regUser);\n        router.push('/fhdemoapp');\n    },\n    async finishRegistration({state}) {\n        await api.finishRegistration(state.regToken, state.emailVerificationCode);\n        router.push(\"/fhdemoapp\");\n    },\n    async saveProfileChanges({state}) {\n        if (state.givenNameChanged) {\n            await api.modifyAttribute(state.usrProfile.userName, \"givenName\", state.usrProfile.givenName);\n        }\n        if (state.snChanged) {\n            await api.modifyAttribute(state.usrProfile.userName, \"sn\", state.usrProfile.sn);\n        }\n        if (state.mailChanged) {\n            await api.modifyAttribute(state.usrProfile.userName, \"mail\", state.usrProfile.mail);\n        }\n        if (state.telephoneNumberChanged) {\n            await api.modifyAttribute(state.usrProfile.userName, \"telephoneNumber\", state.usrProfile.telephoneNumber);\n        }\n        if (state.frdpMFAChoiceChanged) {\n            state.usrProfile.frdpmfachoice = state.selectedMFAChoice;\n            await api.modifyAttribute(state.usrProfile.userName, \"frdpmfachoice\", state.selectedMFAChoice);\n        }\n        if (state.frdpMFAPrefChanged) {\n            state.usrProfile.frdpmfapref = state.selectedMFAPref;\n            await api.modifyAttribute(state.usrProfile.userName, \"frdpmfapref\", state.selectedMFAPref);\n        }\n        router.push('/fhdemoapp');\n    },\n    async lockUser({ state }) {\n        await api.lockUser(state.targetUserId);\n    },\n    async unlockUser({ state }) {\n        await api.unlockUser(state.targetUserId);\n    },\n    async logout({state, commit}) {\n        await api.logout(state.FRSSOCookie);\n        commit('setFRSSOCookie', null);\n        commit('setProfile', null);\n        window.$cookies.remove('iPlanetDirectoryPro', null, 'kaiserpermanente.org');\n        router.push(\"/fhdemoapp\");\n    }\n};\n\nconst mutations = {\n    setLoginId: (state, loginId) => {\n        state.loginId = loginId;\n    },\n    setPassword: (state, password) => {\n        state.password = password;\n    },\n    setProfile: (state, profile) => {\n        if (state.usrProfile == null) {\n            state.usrProfile = profile;\n        }\n        else {\n            for(let prop in profile) {\n                state.usrProfile[prop] = profile[prop];\n            }\n        }\n    },\n    setUserTrustedDevices: (state, devices) => {\n        state.userTrustedDevices = devices;\n    },\n    setUserPushDevices: (state, devices) => {\n        state.userPushDevices = devices;\n    },\n    setUserOathDevices: (state, devices) => {\n        state.userOathDevices = devices;\n    },\n    setUserFIDODevices: (state, devices) => {\n        state.userFIDODevices = devices;\n    },\n    setGivenNameChanged: (state, value) => {\n        state.givenNameChanged = value;\n    },\n    setSNChanged: (state, value) => {\n        state.snChanged = value;\n    },\n    setMailChanged: (state, value) => {\n        state.mailChanged = value;\n    },\n    setTelephoneNumberChanged: (state, value) => {\n        state.telephoneNumberChanged = value;\n    },\n    setFrdpMFAChoiceChanged: (state, value) => {\n        state.frdpMFAChoiceChanged = value;\n    },\n    setFrdpMFAPrefChanged: (state, value) => {\n        state.frdpMFAPrefChanged = value;\n    },\n    setSelectedMFAChoice: (state, value) => {\n        state.selectedMFAChoice = value;\n    },\n    setSelectedMFAPref: (state, value) => {\n        state.selectedMFAPref = value;\n    },\n    setTargetUserId: (state, value) => {\n        state.targetUserId = value;\n    },\n    setFRSSOCookie: (state, value) => {\n        state.FRSSOCookie = value;\n    },\n    setIsHelpDesk: (state, value) => {\n        state.isHelpDesk = value;\n    },\n    setIsPwdReset: (state, value) => {\n        state.isPwdReset = value;\n    },\n    setRegUser: (state, value) => {\n        state.regUser = value;\n    },\n    setRegStatus: (state, value) => {\n        state.regStatus = value;\n    },\n    setEmailVerificationCode: (state, value) => {\n        state.emailVerificationCode = value;\n    },\n    setRegToken: (state, value) => {\n        state.regToken = value;\n    },\n    setLoggedInUserID: (state, userId) => {\n        state.loggedInUserID = userId;\n    }\n};\n\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}