{"remainingRequest":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js!/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex.lopez/vue-projects/kpdemoapp/src/components/RegDone.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/src/components/RegDone.vue","mtime":1551123415057},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: \"RegDone\",\n  computed: _objectSpread({}, mapGetters(['regStatus'])),\n  methods: _objectSpread({}, mapActions(['finishRegistration', 'updateRegToken', 'updateRegEmailVerificationCode']), {\n    onClose: function onClose() {\n      var params = window.location.hash;\n      var token = params.split(\"&\")[1].split(\"=\")[1];\n      var code = params.split(\"&\")[2].split(\"=\")[1];\n      this.updateRegToken(token);\n      this.updateRegEmailVerificationCode(code);\n      this.finishRegistration();\n    }\n  })\n};",{"version":3,"sources":["RegDone.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,WAAA,CAAA,CADA,CAFA;AAKA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,oBAAA,EAAA,gBAAA,EAAA,gCAAA,CAAA,CADA;AAEA,IAAA,OAFA,qBAEA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,QAAA,CAAA,IAAA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,UAAA,IAAA,GAAA,MAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,WAAA,cAAA,CAAA,KAAA;AACA,WAAA,8BAAA,CAAA,IAAA;AACA,WAAA,kBAAA;AACA;AATA;AALA,CAAA","sourcesContent":["<template>\n    <div class=\"row\">\n        <div class=\"card kaiser-card\" style=\"width: 23rem;\">\n            <img src=\"../assets/registration_banner.jpg\" class=\"card-img-top\">\n            <div class=\"card-body\">\n                <h5 class=\"kaiser-title-dark-bg\">Member Registration</h5>&nbsp;&nbsp;&nbsp;\n                <p class=\"kaiser-text-dark-bg\">You can Register as a Member<br>and pick your MFA preferences here.</p>\n            </div>\n        </div>\n        <div class=\"col-sm-6\">\n            <div class=\"card-body\">\n                <h5>Your E-Mail Verification was Successful. Click the<br>button below to Complete your Registration:</h5>\n                <button type=\"button\" class=\"btn kaiser-btn-primary\" @click=\"onClose\">Complete</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapActions, mapGetters } from 'vuex';\n\n    export default {\n        name: \"RegDone\",\n        computed: {\n            ...mapGetters(['regStatus'])\n        },\n        methods: {\n            ...mapActions(['finishRegistration','updateRegToken', 'updateRegEmailVerificationCode']),\n            onClose() {\n                const params = window.location.hash;\n                const token = params.split(\"&\")[1].split(\"=\")[1];\n                const code = params.split(\"&\")[2].split(\"=\")[1];\n                this.updateRegToken(token);\n                this.updateRegEmailVerificationCode(code);\n                this.finishRegistration();\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}