{"remainingRequest":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/thread-loader/dist/cjs.js!/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js!/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/eslint-loader/index.js??ref--13-0!/Users/alex.lopez/vue-projects/kpdemoapp/src/store/modules/commons.js","dependencies":[{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/src/store/modules/commons.js","mtime":1556134173280},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/alex.lopez/vue-projects/kpdemoapp/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport api from '../../api/fridm';\nimport { router } from \"../../main\";\nvar state = {\n  searchAttributes: [{\n    value: \"userName\",\n    display: \"Login Name\"\n  }, {\n    value: \"mail\",\n    display: \"E-Mail Address\"\n  }, {\n    value: \"givenName\",\n    display: \"First Name\"\n  }, {\n    value: \"sn\",\n    display: \"Last Name\"\n  }, {\n    value: \"telephoneNumber\",\n    display: \"Telephone Number\"\n  }],\n  searchOps: [{\n    value: \"sw\",\n    display: \"Starts With\"\n  }, {\n    value: \"eq\",\n    display: \"Equals To\"\n  }, {\n    value: \"co\",\n    display: \"Contains\"\n  }],\n  deviceTypes: {\n    trusted: 'trusted',\n    push: 'push',\n    oath: 'oath',\n    fido: 'fido'\n  },\n  selectedSearchAttribute: null,\n  selectedSearchOp: null,\n  searchCriteriaValue: null,\n  searchResults: null,\n  selectedUser: null,\n  selectedTrustedDevice: null,\n  selectedPushDevice: null,\n  selectedOathDevice: null,\n  selectedFIDODevice: null\n};\nvar getters = {\n  searchAttributes: function searchAttributes(state) {\n    return state.searchAttributes;\n  },\n  searchOps: function searchOps(state) {\n    return state.searchOps;\n  },\n  deviceTypes: function deviceTypes(state) {\n    return state.deviceTypes;\n  },\n  selectedSearchAttribute: function selectedSearchAttribute(state) {\n    return state.selectedSearchAttribute;\n  },\n  selectedSearchOp: function selectedSearchOp(state) {\n    return state.selectedSearchOp;\n  },\n  searchCriteriaValue: function searchCriteriaValue(state) {\n    return state.searchCriteriaValue;\n  },\n  searchResults: function searchResults(state) {\n    return state.searchResults;\n  },\n  selectedUser: function selectedUser(state) {\n    return state.selectedUser;\n  },\n  selectedTrustedDevice: function selectedTrustedDevice(state) {\n    return state.selectedDevice;\n  },\n  selectedPushDevice: function selectedPushDevice(state) {\n    return state.selectedPushDevice;\n  },\n  selectedOathDevice: function selectedOathDevice(state) {\n    return state.selectedOathDevice;\n  },\n  selectedFIDODevice: function selectedFIDODevice(state) {\n    return state.selectedFIDODevice;\n  },\n  selectedUserLocked: function selectedUserLocked(state) {\n    return !!state.selectedUser && state.selectedUser.accountStatus === 'inactive';\n  }\n};\nvar actions = {\n  search: function () {\n    var _search = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var state, commit, searchResp;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              state = _ref.state, commit = _ref.commit;\n              _context.next = 3;\n              return api.userSearch(state.selectedSearchAttribute, state.selectedSearchOp, state.searchCriteriaValue);\n\n            case 3:\n              searchResp = _context.sent;\n              commit('setSearchResults', searchResp.data.result);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function search(_x) {\n      return _search.apply(this, arguments);\n    }\n\n    return search;\n  }(),\n  updateSelectedSearchAttribute: function updateSelectedSearchAttribute(_ref2, selectedSearchAttribute) {\n    var commit = _ref2.commit;\n    commit('setSelectedSearchAttribute', selectedSearchAttribute);\n  },\n  updateSelectedSearchOp: function updateSelectedSearchOp(_ref3, selectedSearchOp) {\n    var commit = _ref3.commit;\n    commit('setSelectedSearchOp', selectedSearchOp);\n  },\n  updateSearchCriteriaValue: function updateSearchCriteriaValue(_ref4, searchCriteriaValue) {\n    var commit = _ref4.commit;\n    commit('setSearchCriteriaValue', searchCriteriaValue);\n  },\n  updateSelectedUser: function updateSelectedUser(_ref5, selectedUser) {\n    var commit = _ref5.commit;\n    commit('setSelectedUser', selectedUser);\n  },\n  updateSelectedDevice: function updateSelectedDevice(_ref6, selectedDevice) {\n    var commit = _ref6.commit;\n    console.log(\"Device Type\");\n    console.log(selectedDevice.devType);\n    console.log(\"About to delete: \");\n    console.log(selectedDevice.selectedDevice.id);\n\n    if (selectedDevice.devType == 'trusted') {\n      commit('setSelectedTrustedDevice', selectedDevice.selectedDevice);\n    }\n\n    if (selectedDevice.devType == 'push') {\n      commit('setSelectedPushDevice', selectedDevice.selectedDevice);\n    }\n\n    if (selectedDevice.devType == 'oath') {\n      commit('setSelectedOathDevice', selectedDevice.selectedDevice);\n    }\n\n    if (selectedDevice.devType == 'fido') {\n      commit('setSelectedFIDODevice', selectedDevice.selectedDevice);\n    }\n  },\n  updateSelectedUserMFAChoice: function updateSelectedUserMFAChoice(_ref7, newMFAChoice) {\n    var commit = _ref7.commit;\n    commit('setSelectedUserMFAChoice', newMFAChoice);\n  },\n  updateSelectedUserMFAPref: function updateSelectedUserMFAPref(_ref8, newMFAPref) {\n    var commit = _ref8.commit;\n    commit('setSelectedUserMFAPref', newMFAPref);\n  },\n  updateSelectedUserStatus: function updateSelectedUserStatus(_ref9, newStatus) {\n    var commit = _ref9.commit;\n    commit('setSelectedUserStatus', newStatus);\n  },\n  saveSelectedUserProfile: function () {\n    var _saveSelectedUserProfile = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref10) {\n      var rootState, state, frdpMFAChoiceChanged, frdpMFAPrefChanged;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              rootState = _ref10.rootState, state = _ref10.state;\n              frdpMFAChoiceChanged = rootState.idm.frdpMFAChoiceChanged;\n              frdpMFAPrefChanged = rootState.idm.frdpMFAPrefChanged;\n\n              if (!frdpMFAChoiceChanged) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 6;\n              return api.modifyAttribute(state.selectedUser.userName, \"frdpmfachoice\", state.selectedUser.frdpmfachoice);\n\n            case 6:\n              if (!frdpMFAPrefChanged) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 9;\n              return api.modifyAttribute(state.selectedUser.userName, \"frdpmfapref\", state.selectedUser.frdpmfapref);\n\n            case 9:\n              router.push('/kpdemoapp');\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function saveSelectedUserProfile(_x2) {\n      return _saveSelectedUserProfile.apply(this, arguments);\n    }\n\n    return saveSelectedUserProfile;\n  }(),\n  deleteSelectedDevice: function () {\n    var _deleteSelectedDevice = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref11, deviceType) {\n      var rootState, state, usrProfile, FRSSOCookie;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              rootState = _ref11.rootState, state = _ref11.state;\n              usrProfile = rootState.idm.usrProfile;\n              FRSSOCookie = rootState.idm.FRSSOCookie;\n\n              if (!(deviceType == 'trusted')) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 6;\n              return api.deleteTrustedDevice(state.selectedTrustedDevice, usrProfile.userName, FRSSOCookie);\n\n            case 6:\n              if (!(deviceType == 'push')) {\n                _context3.next = 9;\n                break;\n              }\n\n              _context3.next = 9;\n              return api.deletePushDevice(state.selectedPushDevice, usrProfile.userName, FRSSOCookie);\n\n            case 9:\n              if (!(deviceType == 'oath')) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.next = 12;\n              return api.deleteOathDevice(state.selectedOathDevice, usrProfile.userName, FRSSOCookie);\n\n            case 12:\n              if (!(deviceType == 'fido')) {\n                _context3.next = 15;\n                break;\n              }\n\n              _context3.next = 15;\n              return api.deleteFIDODevice(state.selectedFIDODevice, usrProfile.userName, FRSSOCookie);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function deleteSelectedDevice(_x3, _x4) {\n      return _deleteSelectedDevice.apply(this, arguments);\n    }\n\n    return deleteSelectedDevice;\n  }(),\n  deleteSelectedPushDevice: function () {\n    var _deleteSelectedPushDevice = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref12) {\n      var rootState, state, usrProfile, FRSSOCookie;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              rootState = _ref12.rootState, state = _ref12.state;\n              usrProfile = rootState.idm.usrProfile;\n              FRSSOCookie = rootState.idm.FRSSOCookie;\n              _context4.next = 5;\n              return api.deletePushDevice(state.selectedDevice, usrProfile.userName, FRSSOCookie);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function deleteSelectedPushDevice(_x5) {\n      return _deleteSelectedPushDevice.apply(this, arguments);\n    }\n\n    return deleteSelectedPushDevice;\n  }(),\n  deleteSelectedOathDevice: function () {\n    var _deleteSelectedOathDevice = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref13) {\n      var rootState, state, usrProfile, FRSSOCookie;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              rootState = _ref13.rootState, state = _ref13.state;\n              usrProfile = rootState.idm.usrProfile;\n              FRSSOCookie = rootState.idm.FRSSOCookie;\n              _context5.next = 5;\n              return api.deleteOathDevice(state.selectedDevice, usrProfile.userName, FRSSOCookie);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function deleteSelectedOathDevice(_x6) {\n      return _deleteSelectedOathDevice.apply(this, arguments);\n    }\n\n    return deleteSelectedOathDevice;\n  }(),\n  deleteSelectedFIDODevice: function () {\n    var _deleteSelectedFIDODevice = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(_ref14) {\n      var rootState, state, usrProfile, FRSSOCookie;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              rootState = _ref14.rootState, state = _ref14.state;\n              usrProfile = rootState.idm.usrProfile;\n              FRSSOCookie = rootState.idm.FRSSOCookie;\n              _context6.next = 5;\n              return api.deleteFIDODevice(state.selectedDevice, usrProfile.userName, FRSSOCookie);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function deleteSelectedFIDODevice(_x7) {\n      return _deleteSelectedFIDODevice.apply(this, arguments);\n    }\n\n    return deleteSelectedFIDODevice;\n  }()\n};\nvar mutations = {\n  setSelectedSearchAttribute: function setSelectedSearchAttribute(state, value) {\n    state.selectedSearchAttribute = value;\n  },\n  setSelectedSearchOp: function setSelectedSearchOp(state, value) {\n    state.selectedSearchOp = value;\n  },\n  setSearchCriteriaValue: function setSearchCriteriaValue(state, value) {\n    state.searchCriteriaValue = value;\n  },\n  setSearchResults: function setSearchResults(state, value) {\n    state.searchResults = value;\n  },\n  setSelectedUser: function setSelectedUser(state, value) {\n    state.selectedUser = value;\n  },\n  setSelectedTrustedDevice: function setSelectedTrustedDevice(state, value) {\n    state.selectedTrustedDevice = value;\n  },\n  setSelectedPushDevice: function setSelectedPushDevice(state, value) {\n    state.selectedPushDevice = value;\n  },\n  setSelectedOathDevice: function setSelectedOathDevice(state, value) {\n    state.selectedOathDevice = value;\n  },\n  setSelectedFIDODevice: function setSelectedFIDODevice(state, value) {\n    state.selectedFIDODevice = value;\n  },\n  setSelectedUserMFAChoice: function setSelectedUserMFAChoice(state, value) {\n    state.selectedUser[\"frdpmfachoice\"] = value;\n  },\n  setSelectedUserMFAPref: function setSelectedUserMFAPref(state, value) {\n    state.selectedUser[\"frdpmfapref\"] = value;\n  },\n  setSelectedUserStatus: function setSelectedUserStatus(state, value) {\n    state.selectedUser.accountStatus = value;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/alex.lopez/vue-projects/kpdemoapp/src/store/modules/commons.js"],"names":["api","router","state","searchAttributes","value","display","searchOps","deviceTypes","trusted","push","oath","fido","selectedSearchAttribute","selectedSearchOp","searchCriteriaValue","searchResults","selectedUser","selectedTrustedDevice","selectedPushDevice","selectedOathDevice","selectedFIDODevice","getters","selectedDevice","selectedUserLocked","accountStatus","actions","search","commit","userSearch","searchResp","data","result","updateSelectedSearchAttribute","updateSelectedSearchOp","updateSearchCriteriaValue","updateSelectedUser","updateSelectedDevice","console","log","devType","id","updateSelectedUserMFAChoice","newMFAChoice","updateSelectedUserMFAPref","newMFAPref","updateSelectedUserStatus","newStatus","saveSelectedUserProfile","rootState","frdpMFAChoiceChanged","idm","frdpMFAPrefChanged","modifyAttribute","userName","frdpmfachoice","frdpmfapref","deleteSelectedDevice","deviceType","usrProfile","FRSSOCookie","deleteTrustedDevice","deletePushDevice","deleteOathDevice","deleteFIDODevice","deleteSelectedPushDevice","deleteSelectedOathDevice","deleteSelectedFIDODevice","mutations","setSelectedSearchAttribute","setSelectedSearchOp","setSearchCriteriaValue","setSearchResults","setSelectedUser","setSelectedTrustedDevice","setSelectedPushDevice","setSelectedOathDevice","setSelectedFIDODevice","setSelectedUserMFAChoice","setSelectedUserMFAPref","setSelectedUserStatus"],"mappings":"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","sourcesContent":["import api from '../../api/fridm';\nimport {router} from \"../../main\";\n\nconst state = {\n    searchAttributes: [\n        {\n            value: \"userName\",\n            display: \"Login Name\"\n        },\n        {\n            value: \"mail\",\n            display: \"E-Mail Address\"\n        },\n        {\n            value: \"givenName\",\n            display: \"First Name\"\n        },\n        {\n            value: \"sn\",\n            display: \"Last Name\"\n        },\n        {\n            value: \"telephoneNumber\",\n            display: \"Telephone Number\"\n        }\n    ],\n    searchOps: [\n        {\n            value: \"sw\",\n            display: \"Starts With\"\n        },\n        {\n            value: \"eq\",\n            display: \"Equals To\"\n        },\n        {\n            value: \"co\",\n            display: \"Contains\"\n        }\n    ],\n    deviceTypes: {\n        trusted: 'trusted',\n        push: 'push',\n        oath: 'oath',\n        fido: 'fido'\n    },\n    selectedSearchAttribute: null,\n    selectedSearchOp: null,\n    searchCriteriaValue: null,\n    searchResults: null,\n    selectedUser: null,\n    selectedTrustedDevice: null,\n    selectedPushDevice: null,\n    selectedOathDevice: null,\n    selectedFIDODevice: null\n};\n\nconst getters = {\n    searchAttributes: (state) => {\n        return state.searchAttributes;\n    },\n    searchOps: (state) => {\n        return state.searchOps;\n    },\n    deviceTypes: (state) => {\n        return state.deviceTypes;\n    },\n    selectedSearchAttribute: (state) => {\n        return state.selectedSearchAttribute;\n    },\n    selectedSearchOp: (state) => {\n        return state.selectedSearchOp;\n    },\n    searchCriteriaValue: (state) => {\n        return state.searchCriteriaValue;\n    },\n    searchResults: (state) => {\n        return state.searchResults;\n    },\n    selectedUser: (state) => {\n        return state.selectedUser;\n    },\n    selectedTrustedDevice: (state) => {\n        return state.selectedDevice;\n    },\n    selectedPushDevice: (state) => {\n        return state.selectedPushDevice;\n    },\n    selectedOathDevice: (state) => {\n        return state.selectedOathDevice;\n    },\n    selectedFIDODevice: (state) => {\n        return state.selectedFIDODevice;\n    },\n    selectedUserLocked: (state) => {\n        return (!!state.selectedUser && state.selectedUser.accountStatus === 'inactive');\n    }\n};\n\nconst actions = {\n    async search({ state, commit }) {\n        const searchResp = await api.userSearch(state.selectedSearchAttribute, state.selectedSearchOp, state.searchCriteriaValue);\n        commit('setSearchResults', searchResp.data.result);\n    },\n    updateSelectedSearchAttribute({ commit }, selectedSearchAttribute) {\n        commit('setSelectedSearchAttribute', selectedSearchAttribute);\n    },\n    updateSelectedSearchOp( { commit }, selectedSearchOp) {\n        commit('setSelectedSearchOp', selectedSearchOp);\n    },\n    updateSearchCriteriaValue({ commit }, searchCriteriaValue) {\n        commit('setSearchCriteriaValue', searchCriteriaValue);\n    },\n    updateSelectedUser( { commit }, selectedUser) {\n        commit('setSelectedUser', selectedUser);\n    },\n    updateSelectedDevice({ commit }, selectedDevice) {\n        console.log(\"Device Type\");\n        console.log(selectedDevice.devType);\n        console.log(\"About to delete: \");\n        console.log(selectedDevice.selectedDevice.id);\n        if (selectedDevice.devType == 'trusted') {\n            commit('setSelectedTrustedDevice', selectedDevice.selectedDevice);\n        }\n        if (selectedDevice.devType == 'push') {\n            commit('setSelectedPushDevice', selectedDevice.selectedDevice);\n        }\n        if (selectedDevice.devType == 'oath') {\n            commit('setSelectedOathDevice', selectedDevice.selectedDevice);\n        }\n        if (selectedDevice.devType == 'fido') {\n            commit('setSelectedFIDODevice', selectedDevice.selectedDevice);\n        }\n    },\n    updateSelectedUserMFAChoice( { commit }, newMFAChoice) {\n        commit('setSelectedUserMFAChoice', newMFAChoice);\n    },\n    updateSelectedUserMFAPref({ commit }, newMFAPref) {\n        commit('setSelectedUserMFAPref', newMFAPref);\n    },\n    updateSelectedUserStatus({ commit }, newStatus) {\n        commit('setSelectedUserStatus', newStatus);\n    },\n    async saveSelectedUserProfile({ rootState, state }) {\n        const { frdpMFAChoiceChanged } = rootState.idm;\n        const { frdpMFAPrefChanged } = rootState.idm;\n        if ( frdpMFAChoiceChanged ) {\n            await api.modifyAttribute(state.selectedUser.userName, \"frdpmfachoice\", state.selectedUser.frdpmfachoice);\n        }\n        if ( frdpMFAPrefChanged ) {\n            await api.modifyAttribute(state.selectedUser.userName, \"frdpmfapref\", state.selectedUser.frdpmfapref);\n        }\n        router.push('/kpdemoapp');\n    },\n    async deleteSelectedDevice({ rootState, state }, deviceType) {\n        const { usrProfile } = rootState.idm;\n        const { FRSSOCookie } = rootState.idm;\n        if (deviceType == 'trusted') {\n            await api.deleteTrustedDevice(state.selectedTrustedDevice, usrProfile.userName, FRSSOCookie);\n        }\n        if (deviceType == 'push') {\n            await api.deletePushDevice(state.selectedPushDevice, usrProfile.userName, FRSSOCookie);\n        }\n        if (deviceType == 'oath') {\n            await api.deleteOathDevice(state.selectedOathDevice, usrProfile.userName, FRSSOCookie);\n        }\n        if (deviceType == 'fido') {\n            await api.deleteFIDODevice(state.selectedFIDODevice, usrProfile.userName, FRSSOCookie);\n        }\n    },\n    async deleteSelectedPushDevice({ rootState, state }) {\n        const { usrProfile } = rootState.idm;\n        const { FRSSOCookie } = rootState.idm;\n        await api.deletePushDevice(state.selectedDevice, usrProfile.userName, FRSSOCookie);\n    },\n    async deleteSelectedOathDevice({ rootState, state }) {\n        const { usrProfile } = rootState.idm;\n        const { FRSSOCookie } = rootState.idm;\n        await api.deleteOathDevice(state.selectedDevice, usrProfile.userName, FRSSOCookie);\n    },\n    async deleteSelectedFIDODevice({ rootState, state }) {\n        const { usrProfile } = rootState.idm;\n        const { FRSSOCookie } = rootState.idm;\n        await api.deleteFIDODevice(state.selectedDevice, usrProfile.userName, FRSSOCookie);\n    }\n};\n\nconst mutations = {\n    setSelectedSearchAttribute: (state, value) => {\n        state.selectedSearchAttribute = value;\n    },\n    setSelectedSearchOp: (state, value) => {\n        state.selectedSearchOp = value;\n    },\n    setSearchCriteriaValue: (state, value) => {\n        state.searchCriteriaValue = value;\n    },\n    setSearchResults: (state, value) => {\n        state.searchResults = value;\n    },\n    setSelectedUser: (state, value) => {\n        state.selectedUser = value;\n    },\n    setSelectedTrustedDevice: (state, value) => {\n        state.selectedTrustedDevice = value;\n    },\n    setSelectedPushDevice: (state, value) => {\n        state.selectedPushDevice = value;\n    },\n    setSelectedOathDevice: (state, value) => {\n        state.selectedOathDevice = value;\n    },\n    setSelectedFIDODevice: (state, value) => {\n        state.selectedFIDODevice = value;\n    },\n    setSelectedUserMFAChoice: (state, value) => {\n        state.selectedUser[\"frdpmfachoice\"] = value;\n    },\n    setSelectedUserMFAPref: (state, value) => {\n        state.selectedUser[\"frdpmfapref\"] = value;\n    },\n    setSelectedUserStatus: (state, value) => {\n        state.selectedUser.accountStatus = value;\n    }\n};\n\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}